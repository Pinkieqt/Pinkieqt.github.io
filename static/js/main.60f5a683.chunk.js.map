{"version":3,"sources":["Components/Navigation.js","Helpfiles/Members.js","Components/Notification.js","Views/ModalArrivalsView.js","Views/ModalWeightView.js","Components/AppendModal.js","Components/Header.js","Components/Footer.js","Components/LoadingSpinner.js","Components/BarGraph.js","Helpfiles/Months.js","Components/LineGraph.js","Views/Dashboard.js","Helpfiles/Exercises.js","Components/FloatingDialog.js","Views/Records.js","Views/Weight.js","Views/Measurements.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","useState","show","setShow","isMobile","useMediaQuery","query","navlinkStyle","maskTransition","useTransition","from","position","opacity","enter","leave","menuTransition","transform","className","icon","faBars","onClick","map","item","key","props","div","style","exact","to","activeClassName","Members","label","records","max","working","Notification","text","isError","notificationStyle","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toast","error","firebase","require","ModalArrivalView","dudu","luke","tom","dejvo","cahlik","selectedButtons","setSelectedButtons","isSubmitDisabled","setIsSubmitDisabled","Date","date","setDate","renderFix","setRenderFix","checkboxItems","tmpDict","onCheckChange","onChange","day","value","calendarClassName","clearIcon","calendarIcon","submitHandler","type","disabled","db","firestore","selectedDate","setHours","addedMembers","notAddedMembers","element","arrived","isInside","memberData","usersData","data","filter","member","id","arrivals","forEach","arrival","toDate","getTime","Timestamp","fromDate","push","name","tmpArrivals","collection","doc","update","length","toString","onSubmit","ModalWeightView","selectedUser","setSelectedUser","inputWeight","setInputWeight","options","onInputHandle","e","target","useEffect","tmpWeight","weightData","weight","onSelectChangeHandle","min","step","catch","console","log","AppendModal","method_props","selector","setSelector","showHandler","faPlus","faTimes","Header","Footer","href","faGithub","faHeart","LoadingSpinner","BarGraph","width","dataKey","fill","barSize","Months","abbreviation","LineGraph","graphData","result","entry","categories","month","slicedEntry","substring","getLines","height","margin","top","right","left","bottom","stroke","strokeWidth","dot","DashboardComponent","thisYear","total","latest","content","setContent","arrivalsTableContent","setArrivalsTableContent","barGraphContent","setBarGraphContent","lineGraphContent","setLineGraphContent","isLoading","setIsLoading","generateContent","latestArrivals","barGraphData","user","getYear","sort","a","b","slice","tmpDate","getDate","getMonth","faTrashAlt","splice","indexOf","window","confirm","then","deleteLastArrival","allArrivals","concat","0","1","2","3","4","5","6","7","8","9","10","11","generateLineGraph","Exercises","category","kategorie","FloatingDialog","setMax","work","setWork","exMax","exWork","isExerciseInside","tmpExData","exercisesData","exercise","faEdit","RecordsComponent","cards","tableDesign","WeightComponent","MeasurementsComponent","App","loading","setUsersData","onSnapshot","serverUpdate","users","docs","_doc","path","Dashboard","Weight","Records","newestOnTop","rtl","pauseOnFocusLoss","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.60f5a683.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction Navigation(){\r\n\r\n    const [show, setShow] = useState(false); //default\r\n    const isMobile = useMediaQuery({ query: \"(max-device-width: 1024px)\" });\r\n\r\n    //Router NavLink styling\r\n    let navlinkStyle = \"text-myTheme-sec md:border-b-2\";\r\n\r\n    //React Spring\r\n    const maskTransition = useTransition(show, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n    })\r\n\r\n    const menuTransition = useTransition(show, null, {\r\n        from: { opacity: 0, transform: \"translateX(-100%)\" },\r\n        enter: { opacity: 1, transform: \"translateX(0%)\" },\r\n        leave: { opacity: 0, transform: \"translateX(-100%)\" },\r\n    })\r\n\r\n    return (\r\n        <nav>\r\n            { /* Mobile view of navigation */ }\r\n            {isMobile &&\r\n                <div>\r\n                    <span className=\"text-xl text-myTheme-tpr\">\r\n                        <FontAwesomeIcon icon={ faBars } onClick={() => setShow(!show)} />\r\n                    </span>\r\n\r\n                    { /* Mask/background transition and content */ }\r\n                    {\r\n                        maskTransition.map(({ item, key, props }) =>\r\n                            item && \r\n                            <animated.div \r\n                                key={key} \r\n                                style={props} \r\n                                className=\"bg-black-t-30 fixed top-0 left-0 w-full h-full z-50\"\r\n                                onClick={() => setShow(false)}\r\n                            >\r\n                            </animated.div>\r\n                        )\r\n                    }\r\n\r\n\r\n                    { /* Menu transition and content */ }\r\n                    {\r\n                        menuTransition.map(({ item, key, props }) =>\r\n                            item && \r\n                            <animated.div \r\n                                key={key} \r\n                                style={props} \r\n                                className=\"fixed bg-myTheme-bg top-0 left-0 w-3/5 h-full z-50 shadow p-3 \"\r\n                            >\r\n                                <div className=\"font-bold p-3 text-center border-b-2 border-gray-500\">\r\n                                    Gym u Duduho ✌️\r\n                                </div>\r\n                                <ul className=\"text-left\">\r\n                                    <li> <NavLink exact to=\"/\" activeClassName={navlinkStyle} className=\"py-3 block text-myTheme-pr\" onClick={() => setShow(false)}>Dashboard</NavLink> </li>\r\n                                    <li> <NavLink to=\"/weight\" activeClassName={navlinkStyle} className=\"py-3 block text-myTheme-pr\" onClick={() => setShow(false)}>Tělesná váha</NavLink> </li>\r\n                                    {/* <li> <NavLink to=\"/measurements\" activeClassName={navlinkStyle} className=\"py-3 block text-myTheme-pr\" onClick={() => setShow(false)}>Míry</NavLink> </li> */}\r\n                                    <li> <NavLink to=\"/records\" activeClassName={navlinkStyle} className=\"py-3 block text-myTheme-pr\" onClick={() => setShow(false)}>Maximálky</NavLink> </li>\r\n                                </ul>\r\n                            </animated.div>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n    \r\n            { /* Desktop view of navigation */ }\r\n            {!isMobile &&\r\n                <div>\r\n                    <NavLink exact to=\"/\" activeClassName={navlinkStyle} className=\"inline p-3 text-myTheme-pr\">Dashboard</NavLink>\r\n                    <NavLink to=\"/weight\" activeClassName={navlinkStyle} className=\"inline p-3 text-myTheme-pr\">Tělesná váha</NavLink>\r\n                    {/* <NavLink to=\"/measurements\" activeClassName={navlinkStyle} className=\"inline p-3 text-myTheme-pr\">Míry</NavLink> */}\r\n                    <NavLink to=\"/records\" activeClassName={navlinkStyle} className=\"inline p-3 text-myTheme-pr\">Maximálky</NavLink>\r\n                </div>\r\n            }\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","const Members = [\r\n    {\r\n        key: 'dudu',\r\n        label: ' Dudu',\r\n        records: [{key: \"df\", max: 32, working: 50}]\r\n    },\r\n    {\r\n        key: 'luke',\r\n        label: ' Luke',\r\n        records: [{key: \"df\", max: 32, working: 50}]\r\n    },\r\n    {\r\n        key: 'tom',\r\n        label: ' Tom',\r\n        records: [{key: \"df\", max: 32, working: 50}]\r\n    },\r\n    {\r\n        key: 'dejvo',\r\n        label: ' Dejvo',\r\n        records: [{key: \"df\", max: 32, working: 50}]\r\n    },\r\n    {\r\n        key: 'cahlik',\r\n        label: ' Cahlik',\r\n        records: [{key: \"df\", max: 32, working: 50}]\r\n    },\r\n  ];\r\n  \r\n  export default Members;","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nfunction Notification(text, isError){\r\n\r\n    const notificationStyle = {\r\n        position: \"bottom-right\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: false,\r\n        progress: undefined,\r\n    }\r\n\r\n    if(isError){\r\n        toast.error(`😢 ${text}`, {notificationStyle});\r\n    }\r\n    else {\r\n        toast(`🤞 ${text}`, {notificationStyle});\r\n    }\r\n    \r\n}\r\n\r\nexport default Notification;","import React, { useState } from \"react\";\r\nimport Members from \"../Helpfiles/Members\";\r\nimport Notification from \"../Components/Notification\";\r\n\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction ModalArrivalView(props){\r\n\r\n    const [selectedButtons, setSelectedButtons] = useState({dudu: false, luke: false, tom: false, dejvo: false, cahlik: false});\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    // HAVE To be there because updating dictionary in state (for example the dictionary two lines up) \r\n    // does NOT call the render function!\r\n    // changing other state then does this... sorcery..\r\n    const [renderFix, setRenderFix] = useState(false);\r\n\r\n    //Buttons with members\r\n    let checkedButton = \"bg-myTheme-sec border border-myTheme-sec text-white w-32 p-2 m-2 shadow-xl rounded-md transition duration-500 ease-in-out\";\r\n    let uncheckedButton = \"text-myTheme-tpr border w-32 p-2 m-2 shadow-xl rounded-md transition duration-500 ease-in-out\";\r\n\r\n    let checkboxItems = Members.map((item) => \r\n        <button className={selectedButtons[item.key] ? checkedButton : uncheckedButton} onClick={() => onCheckChange(item.key)} key={item.key}>{item.label}</button>\r\n    );\r\n\r\n    //On member button click handler\r\n    function onCheckChange(key){\r\n        let tmpDict = selectedButtons;\r\n        tmpDict[key] = !tmpDict[key];\r\n        setSelectedButtons(tmpDict);\r\n        setIsSubmitDisabled(false);\r\n        setRenderFix(!renderFix);\r\n    }\r\n    \r\n    //Function to register members when arriving\r\n    function onSubmit(){\r\n        const db = firebase.firestore();\r\n\r\n        let selectedDate = date;\r\n        selectedDate.setHours(12, 0, 0, 0);\r\n    \r\n        let addedMembers = [];\r\n        let notAddedMembers = [];\r\n\r\n        for (let element in selectedButtons){\r\n            let arrived = selectedButtons[element];\r\n            let isInside = false;\r\n            //Member arrived\r\n            if(arrived){\r\n                const memberData = props.usersData.data.filter(member => {\r\n                    return member.id === element;\r\n                });\r\n\r\n                //check if member is already registered\r\n                memberData[0].arrivals.forEach(arrival => {\r\n                    if (arrival.toDate().getTime() === firebase.firestore.Timestamp.fromDate(selectedDate).toDate().getTime()){\r\n                        isInside = true;\r\n                    }\r\n                });\r\n\r\n                if (!isInside) {\r\n                    let tmpArrivals = memberData[0].arrivals;\r\n                    tmpArrivals.push(firebase.firestore.Timestamp.fromDate(selectedDate));\r\n                    db.collection(\"users\").doc(element).update({ arrivals : tmpArrivals });\r\n                    addedMembers.push(memberData[0].name);\r\n                }\r\n                else {\r\n                    notAddedMembers.push(memberData[0].name);\r\n                }\r\n            }\r\n        }\r\n\r\n        //Notification\r\n        if (addedMembers.length > 1) Notification(\"Uživatelé \" + addedMembers.toString() + \" připsáni.\", false);\r\n        else if (addedMembers.length === 1) Notification(\"Uživatel \" + addedMembers.toString() + \" připsán.\", false);\r\n\r\n        if (notAddedMembers.length > 1) Notification(\"Uživatelé \" + notAddedMembers.toString() + \" jsou již zapsáni.\", true);\r\n        if (notAddedMembers.length === 1) Notification(\"Uživatel \" + notAddedMembers.toString() + \" je již zapsán.\", true);\r\n        \r\n        //Dismiss modal\r\n        props.submitHandler();\r\n    }\r\n\r\n\r\n    //Render\r\n    return (\r\n        <div>\r\n            <div>\r\n                <p className=\"py-6 text-myTheme-tsec\">Níže lze vybrat jiné datum pro pozdější zápisy.</p>\r\n                {/* <DayPickerInput value={date} onDayChange={day => setDate(day)} hideOnDayClick format=\"MM/dd/yyyy\"/> */}\r\n                    <DatePicker\r\n                        onChange={day => setDate(day)} \r\n                        value={date}\r\n                        className=\"text-myTheme-tpr shadow rounded-md p-2\"\r\n                        calendarClassName=\"text-black\"\r\n                        clearIcon={null}\r\n                        calendarIcon={null}\r\n                    />\r\n            </div>\r\n            <h2 className=\"font-bold mt-5 text-myTheme-tsec\">Klikni na členy, kteří dnes přišli do posilovny a ulož změny.</h2>\r\n            <h2 className=\"font-bold mb-5 text-myTheme-tsec\"> O provedených změnách budeš informován.</h2>\r\n            <div className=\"flex-col sm:flex-col md:flex-row items-center\">\r\n                {checkboxItems}\r\n            </div>\r\n            <div className=\"flex justify-center flex-wrap\">\r\n                <button onClick={() => props.submitHandler()} type=\"button\" className=\"w-32 rounded-lg shadow-xl border p-3 m-3 mt-12\">Zrušit</button>\r\n                <button disabled={isSubmitDisabled} onClick={() => onSubmit()} type=\"submit\" className=\"rounded-lg font-bold bg-myTheme-pr text-white shadow-xl border p-3 m-3 mt-12\">Uložit změny</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalArrivalView;","import React, { useState, useEffect } from \"react\";\r\nimport Members from \"../Helpfiles/Members\";\r\nimport Notification from \"../Components/Notification\";\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction ModalWeightView(props){\r\n\r\n    const [selectedUser, setSelectedUser] = useState(\"dudu\");\r\n    const [inputWeight, setInputWeight] = useState(70);\r\n\r\n\r\n    let options = Members.map((member) => \r\n        <option key={member.key} value={member.key}>\r\n            {member.label}\r\n        </option>\r\n    );\r\n\r\n    //Get previous weight of selected user\r\n    useEffect(() => {\r\n        const memberData = props.usersData.data.filter(item => {\r\n            return item.id === selectedUser;\r\n        });\r\n\r\n        //Get latest weight record\r\n        let tmpWeight = memberData[0].weightData[memberData[0].weightData.length - 1];\r\n\r\n        //Set it as state\r\n        if (tmpWeight !== undefined) setInputWeight(tmpWeight.weight);\r\n        else setInputWeight(70);\r\n        \r\n    }, [selectedUser]);\r\n\r\n    //Select handler\r\n    function onSelectChangeHandle(e){\r\n        setSelectedUser(e.target.value);\r\n    }\r\n\r\n    //Range select handler\r\n    function onInputHandle(e){\r\n        setInputWeight(e.target.value);\r\n    }\r\n\r\n    function onSubmit(){\r\n        const db = firebase.firestore();\r\n\r\n        let date = new Date();\r\n        date.setHours(12, 0, 0, 0);\r\n\r\n        const memberData = props.usersData.data.filter(member => {\r\n            return member.id === selectedUser;\r\n        });\r\n\r\n        let tmpWeight = memberData[0].weightData;\r\n        tmpWeight.push({date: firebase.firestore.Timestamp.fromDate(date), weight: inputWeight});\r\n\r\n        //Update record in database\r\n        db.collection(\"users\").doc(selectedUser).update({ weightData : tmpWeight })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n            Notification(\"Chyba\", true);\r\n        });\r\n\r\n        //Notification\r\n        Notification(\"Váha byla zapsána pro uživatele \" + memberData[0].name + \".\", false);\r\n\r\n        //Dismiss modal\r\n        props.submitHandler();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"font-bold mt-5 mb-5 text-myTheme-tsec\">Vyber se, zadej svou váhu a poté ulož změny.</h2>\r\n            <select className=\"text-myTheme-tpr text-xl p-2\" name=\"members\" id=\"memberSelector\" onChange={(e) => onSelectChangeHandle(e)}>\r\n                {options}\r\n            </select>\r\n\r\n            <div className=\"mt-5\">\r\n                <input className=\"font-bold text-4xl text-myTheme-tpr text-center\" type=\"number\" id=\"weightInput\" name=\"weight\" min=\"65\" max=\"100\" step=\"0.1\" value={inputWeight} onChange={(e) => onInputHandle(e)}>\r\n                </input>\r\n            </div>\r\n\r\n            <div>\r\n                <input className=\"w-full sm:w-full lg:w-64 mt-5\" type=\"range\" id=\"points\" name=\"points\" min=\"65\" max=\"110\" value={inputWeight} onChange={(e) => onInputHandle(e)} step=\"0.1\">\r\n                </input>\r\n            </div>\r\n\r\n            <div className=\"flex justify-center flex-wrap\">\r\n                <button onClick={() => props.submitHandler()} type=\"button\" className=\"w-32 rounded-lg shadow-xl border p-3 m-3 mt-12\">Zrušit</button>\r\n                <button onClick={() => onSubmit()} type=\"submit\" className=\"rounded-lg font-bold bg-myTheme-pr text-white shadow-xl border p-3 m-3 mt-12\">Uložit změny</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWeightView;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport ModalArrivalView from \"../Views/ModalArrivalsView\";\r\nimport ModalWeightView from \"../Views/ModalWeightView\";\r\n\r\nfunction AppendModal(method_props){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const isMobile = useMediaQuery({ query: \"(max-device-width: 1024px)\" });\r\n    const [selector, setSelector] = useState(true);\r\n\r\n    //React Spring\r\n    const maskTransition = useTransition(show, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n    })\r\n\r\n    const menuTransition = useTransition(show, null, {\r\n        from: { opacity: 0, transform: \"translateY(-100%)\" },\r\n        enter: { opacity: 1, transform: \"translateY(0%)\" },\r\n        leave: { opacity: 0, transform: \"translateY(-100%)\" },\r\n    })\r\n\r\n    //Handler to dismiss modal\r\n    function showHandler() {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { /* Other view for desktop and mobile */ }\r\n            {isMobile && \r\n                <span className=\"text-xl text-myTheme-tpr\">\r\n                    <FontAwesomeIcon icon={ faPlus } onClick={() => setShow(!show)} />\r\n                </span>\r\n            }\r\n\r\n            {!isMobile && \r\n                <span className=\"text-l cursor-pointer text-myTheme-tpr\" onClick={() => setShow(!show)} >\r\n                    Připsat data <FontAwesomeIcon icon={ faPlus } />\r\n                </span>\r\n            }\r\n\r\n            { /* Mask/background transition and content */ }\r\n            {\r\n                maskTransition.map(({ item, key, props }) =>\r\n                    item && \r\n                    <animated.div \r\n                        key={key} \r\n                        style={props} \r\n                        className=\"bg-black-t-30 fixed top-0 left-0 w-full h-full z-50\"\r\n                        onClick={() => setShow(false)}\r\n                    >\r\n                    </animated.div>\r\n                )\r\n            }\r\n\r\n\r\n            { /* Menu transition and content */ }\r\n            {\r\n                menuTransition.map(({ item, key, props }) =>\r\n                    item && \r\n                    <animated.div \r\n                        key={key} \r\n                        style={props} \r\n                        className=\"fixed bg-myTheme-cardbg top-0 left-0 w-full h-auto z-50 shadow p-3 \"\r\n                    >\r\n                        <div className=\"font-bold p-3 text-right\">\r\n                            <span className=\"text-xl text-myTheme-tpr\">\r\n                                <FontAwesomeIcon icon={ faTimes } className=\"cursor-pointer\" onClick={() => setShow(!show)} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        {selector ?\r\n                            <div>\r\n                                <button className=\"w-32 rounded-lg font-bold bg-myTheme-pr text-white shadow-xl border p-3 m-3\">Příchod</button>\r\n                                <button onClick={() => setSelector(false)} className=\"w-32 rounded-lg shadow-xl border hover:bg-gray-500 transition duration-500 ease-in-out p-3 m-3\">Váha</button>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <button onClick={() => setSelector(true)} className=\"w-32 rounded-lg shadow-xl border hover:bg-gray-500 transition duration-500 ease-in-out p-3 m-3\">Příchod</button>\r\n                                <button className=\"w-32 rounded-lg font-bold bg-myTheme-pr text-white shadow-xl  border p-3 m-3\">Váha</button>\r\n                            </div>\r\n                        }\r\n\r\n                        {selector ? \r\n                            <div>\r\n                                <ModalArrivalView usersData={method_props.usersData} submitHandler={showHandler} />\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <ModalWeightView usersData={method_props.usersData} submitHandler={showHandler} />\r\n                            </div>\r\n                        }\r\n\r\n                    </animated.div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppendModal;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport AppendModal from './AppendModal';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header(props){\r\n    return (\r\n        <header className=\"border-b p-3 flex mb-4 bg-myTheme-cardbg\">\r\n            <span className=\"font-bold w-1/3 text-myTheme-tpr items-center content-center\">\r\n                <NavLink exact to=\"/\">💪🏼</NavLink>\r\n            </span>\r\n\r\n            <div className=\"w-1/3 text-center\">\r\n                <AppendModal usersData={props.usersData}/>\r\n            </div>\r\n            \r\n            <div className=\"w-1/3 text-right\">\r\n                <Navigation />\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"flex justify-evenly flex-wrap content-center bg-myTheme-pr text-white text-center text-l p-3 w-full\">\r\n            <div className=\"w-1/2 my-5\">\r\n                <a href=\"https://github.com/Pinkieqt/react-workout-app\">\r\n                    <span className=\"text-xl mr-1\">\r\n                        <FontAwesomeIcon icon={ faGithub } />\r\n                    </span>\r\n                    Github\r\n                </a>\r\n            </div>\r\n            <div className=\"w-1/2 my-5\">\r\n                Created by\r\n                <span className=\"text-myTheme-sec\">\r\n                    &nbsp;Dudu    \r\n                </span>\r\n                <span className=\"text-xl ml-1\">\r\n                        <FontAwesomeIcon icon={ faHeart } />\r\n                </span>\r\n                <br></br>\r\n                \r\n            </div>\r\n            \r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction LoadingSpinner(){\r\n    return (\r\n        <div>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner;","import React from \"react\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nfunction BarGraph(props){\r\n\r\n    let barColor = \"bg-secondary\"\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n                data={props.arrivals}\r\n                // margin={{\r\n                //     top: 5, right: 30, left: 20, bottom: 5,\r\n                // }}\r\n            >\r\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                <XAxis dataKey=\"name\" />\r\n                {/* <YAxis /> */}\r\n                <Tooltip />\r\n                {/* <Legend /> */}\r\n                <Bar dataKey=\"arrivals\" fill=\"#1B1A34\" barSize={30} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default BarGraph;","const Months = [\r\n    {\r\n        label: \"Leden\",\r\n        abbreviation: \"led\"\r\n    },\r\n    {\r\n        label: \"Únor\",\r\n        abbreviation: \"úno\" \r\n    },\r\n    {\r\n        label: \"Březen\",\r\n        abbreviation: \"bře\" \r\n    },\r\n    {\r\n        label: \"Duben\",\r\n        abbreviation: \"dub\" \r\n    },\r\n    {\r\n        label: \"Květen\",\r\n        abbreviation: \"kvě\" \r\n    },\r\n    {\r\n        label: \"Červen\",\r\n        abbreviation: \"čer\" \r\n    },\r\n    {\r\n        label: \"Červenec\",\r\n        abbreviation: \"čvc\" \r\n    },\r\n    {\r\n        label: \"Srpen\",\r\n        abbreviation: \"srp\" \r\n    },\r\n    {\r\n        label: \"Září\",\r\n        abbreviation: \"zář\" \r\n    },\r\n    {\r\n        label: \"Říjen\",\r\n        abbreviation: \"říj\" \r\n    },\r\n    {\r\n        label: \"Listopad\",\r\n        abbreviation: \"lis\" \r\n    },\r\n    {\r\n        label: \"Prosinec\",\r\n        abbreviation: \"pro\" \r\n    }\r\n]\r\n\r\nexport default Months;","import React, { useEffect, useState } from \"react\";\r\nimport Months from \"../Helpfiles/Months\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nfunction LineGraph(props){\r\n\r\n    function getLines(){\r\n        let result = Months;\r\n\r\n        for (let entry in props.categories){\r\n            for (let month in props.categories[entry]){\r\n                let slicedEntry = entry.substring(1);\r\n                result[month][slicedEntry] = props.categories[entry][month];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const graphData = getLines();\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n                data={graphData}\r\n                margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n            >\r\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                <XAxis dataKey=\"abbreviation\" />\r\n                {/* <YAxis /> */}\r\n                <Tooltip />\r\n                {/* <Legend /> */}\r\n\r\n                { graphData[0][18] > -1 && <Line type=\"monotone\" dataKey=\"18\" stroke=\"#61305d\"  strokeWidth={2} dot={false}/> }\r\n                { graphData[0][19] > -1 && <Line type=\"monotone\" dataKey=\"19\" stroke=\"#b55c6c\"  strokeWidth={2} dot={false}/> }\r\n                { graphData[0][20] > -1 && <Line type=\"monotone\" dataKey=\"20\" stroke=\"#e77c7c\"  strokeWidth={2} dot={false}/> }\r\n                { graphData[0][21] > -1 && <Line type=\"monotone\" dataKey=\"21\" stroke=\"#f7b679\"  strokeWidth={2} dot={false}/> }\r\n                { graphData[0][22] > -1 && <Line type=\"monotone\" dataKey=\"22\" stroke=\"#8884d8\"  strokeWidth={2} dot={false}/> }\r\n                { graphData[0][23] > -1 && <Line type=\"monotone\" dataKey=\"23\" stroke=\"#8884d8\"  strokeWidth={2} dot={false}/> }\r\n\r\n\r\n            </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default LineGraph;","import React, { useState, useEffect } from \"react\";\r\nimport LoadingSpinner from \"../Components/LoadingSpinner\";\r\nimport BarGraph from \"../Components/BarGraph\";\r\nimport LineGraph from \"../Components/LineGraph\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport Notification from \"../Components/Notification\";\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction DashboardComponent(props){\r\n    //props.usersData.\r\n    //prichody tento rok, prichody celkove, posledni prichod\r\n    const [content, setContent] = useState({thisYear: \"\", total: \"\", latest: \"\"});\r\n    const [arrivalsTableContent, setArrivalsTableContent] = useState();\r\n    const [barGraphContent, setBarGraphContent] = useState([]);\r\n    const [lineGraphContent, setLineGraphContent] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //function to generate content for dashboard graphs, cards, etc.\r\n    function generateContent(){\r\n        let thisYear = 0;\r\n        let total = 0;\r\n        let latest = 0;\r\n\r\n        let latestArrivals = [];\r\n        let barGraphData = [];\r\n\r\n        props.usersData.data.forEach(user => {\r\n            user.arrivals.forEach(arrival => {\r\n                //Counting\r\n                total = total + 1;\r\n\r\n                if (arrival.toDate().getYear() === new Date().getYear()) thisYear++;\r\n\r\n                if (arrival > latest) latest = arrival;\r\n\r\n\r\n                //Latest arrivals table\r\n                latestArrivals.push({member: user.name, date: arrival.toDate(), key: total})\r\n            });\r\n\r\n            //Bar graph content\r\n            barGraphData.push({name: user.name, arrivals: user.arrivals.length});\r\n        });\r\n\r\n        //Sort latest arrivals\r\n        latestArrivals = latestArrivals.sort((a, b) => b.date - a.date);\r\n        \r\n        //Map elements to html\r\n        latestArrivals = latestArrivals.slice(0,5).map(element => {\r\n            let tmpDate = element.date.getDate() + \"/\" + (element.date.getMonth() + 1);\r\n            return (\r\n                <tr key={element.key}>\r\n                    <td className=\"border px-4 py-1 text-myTheme-tsec\">{element.member}</td>\r\n                    <td className=\"border px-4 py-1 text-myTheme-tsec\">{tmpDate}</td>\r\n                    <td className=\"border px-4 py-1\">\r\n                        <span>\r\n                            <FontAwesomeIcon className=\"cursor-pointer text-myTheme-tsec hover:text-myTheme-pr\" icon={ faTrashAlt } onClick={() => deleteLastArrival(element)} />\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n\r\n        let date = latest.toDate().getDate() + \"/\" + (latest.toDate().getMonth() + 1);\r\n\r\n        setArrivalsTableContent(latestArrivals);\r\n        setBarGraphContent(barGraphData);\r\n        setContent({thisYear: thisYear, total: total, latest: date});\r\n    }\r\n\r\n    //function to delete last arrival\r\n    function deleteLastArrival(element){\r\n        const db = firebase.firestore()\r\n\r\n        let tmpArrivals = [];\r\n        props.usersData.data.forEach(user => {\r\n            if (user.name === element.member){\r\n                tmpArrivals = user.arrivals;\r\n                tmpArrivals.forEach(arrival => {\r\n                    if (arrival.toDate().getTime() === firebase.firestore.Timestamp.fromDate(element.date).toDate().getTime()){\r\n                        //Delete arrival from array\r\n                        tmpArrivals.splice(tmpArrivals.indexOf(arrival), 1);\r\n\r\n                        if(window.confirm(\"Opravdu vymazat záznam?\")){\r\n                            //Update record in database\r\n                            db.collection(\"users\").doc(user.id).update({ arrivals : tmpArrivals })\r\n                            .then(function (){\r\n                                Notification(\"Záznam byl smazán.\", false)\r\n                            })\r\n                            .catch(function(error) {\r\n                                console.log(error); \r\n                                Notification(\"Chyba\", true);\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //function to generate data for line graph\r\n    function generateLineGraph(){\r\n        let allArrivals = [];\r\n        let categories = {};\r\n\r\n        //Combining arrays\r\n        props.usersData.data.forEach(element => {\r\n            allArrivals = allArrivals.concat(element.arrivals);\r\n        });\r\n\r\n        allArrivals.forEach(date => {\r\n            let tmpDate = date.toDate();\r\n            if (categories[tmpDate.getYear()]){\r\n                categories[tmpDate.getYear()][tmpDate.getMonth()]++;\r\n            }\r\n            else {\r\n                categories[tmpDate.getYear()] = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0};\r\n                categories[tmpDate.getYear()][tmpDate.getMonth()]++;\r\n            }           \r\n        });\r\n\r\n        setLineGraphContent(categories);\r\n    }\r\n\r\n    //Generate new content everytime when props change\r\n    useEffect(() => {\r\n        if (props.usersData.data.length > 0){\r\n            generateContent();\r\n            generateLineGraph();\r\n            setIsLoading(false);\r\n        }\r\n        else {\r\n            setIsLoading(true);\r\n        }\r\n    }, [props]);\r\n\r\n\r\n\r\n    /* \r\n        Render\r\n    */\r\n    return (\r\n        <div>\r\n            {isLoading &&\r\n                <div className=\"flex justify-center mt-64 \">  \r\n                    <LoadingSpinner/> \r\n                </div>\r\n            }\r\n\r\n            {!isLoading &&\r\n                <div className=\"container mx-auto md:px-32\">\r\n                    <div className=\"flex justify-center flex-wrap\">\r\n                        <div className=\"w-full mb-12 sm:mb-12 md:mb-0\">\r\n                            <h1 className=\"font-bold text-2xl text-center text-myTheme-tsec\">Dashboard</h1>\r\n                        </div>\r\n                        \r\n                        <div className=\"w-full flex justify-between flex-wrap mb-12 sm:mb-12 md:mb-0\">\r\n                            <div className=\"w-full sm:w-full md:w-64 h-32 bg-myTheme-cardbg rounded shadow-xl m-1 sm:m-1 md:m-6 text-center\">\r\n                                <div className=\"pt-6 text-myTheme-tsec\"> celkem </div>\r\n                                <div className=\"text-4xl font-bold text-myTheme-tpr\"> {content.total} </div>\r\n                            </div>\r\n                            <div className=\"w-full sm:w-full md:w-64 h-32 bg-myTheme-cardbg rounded shadow-xl m-1 sm:m-1 md:m-6 text-center\">\r\n                                <div className=\"pt-6 text-myTheme-tsec\"> tento rok </div>\r\n                                <div className=\"text-4xl font-bold text-myTheme-tpr\"> {content.thisYear} </div>\r\n                            </div>\r\n                            <div className=\"w-full sm:w-full md:w-64 h-32 bg-myTheme-cardbg rounded shadow-xl m-1 sm:m-1 md:m-6 text-center\">\r\n                                <div className=\"pt-6 text-myTheme-tsec\"> poslední </div>\r\n                                <div className=\"text-4xl font-bold text-myTheme-tpr\"> {content.latest} </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Příchody */}\r\n                        <div className=\"w-full mb-2 sm:mb-2 md:mb-0\">\r\n                            <h1 className=\"font-bold text-2xl text-center text-myTheme-tsec\">Příchody</h1>\r\n                            <h3 className=\"text-center text-myTheme-tsec\">V grafu níže lze pozorovat měsíční srovnání příchodů v jednotlivých letech.</h3>\r\n                        </div>\r\n\r\n                        {/* Linechart */}\r\n                        <div className=\"w-full h-40 sm:h-40 md:h-64 p-1 sm:p-1 md:p-6 mb-12 sm:mb-12 md:mb-0\">\r\n                            <div className=\"w-full h-40 sm:h-40 md:h-64 bg-myTheme-cardbg rounded shadow-xl text-center\" >\r\n                                <LineGraph categories={lineGraphContent}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-full flex justify-center flex-wrap mb-1 sm:mb-1 md:mt-12\">\r\n                            {/* Barchart */}\r\n                            <div className=\"w-full sm:w-full md:w-3/5 h-64 p-1 sm:p-1 md:p-6 mt-2 sm:mt-2 md:mt-0 mb-16 sm:mb-16 md:mb-0\">\r\n                                <div className=\"w-full\">\r\n                                    <h3 className=\"text-center text-myTheme-tsec mb-2 \">Příchody jednotlivých členů</h3>\r\n                                </div>\r\n                                <div className=\"w-full h-64 bg-myTheme-cardbg rounded shadow-xl p-2 text-center\">\r\n                                    <BarGraph arrivals={barGraphContent}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"w-full sm:w-full md:w-2/5 h-64 p-1 sm:p-1 md:p-6 mt-2 sm:mt-2 md:mt-0 mb-12 sm:mb-12 md:mb-0\">\r\n                                <div className=\"w-full\">\r\n                                    <h3 className=\"text-center text-myTheme-tsec mb-2\">Poslední příchody</h3>\r\n                                </div>\r\n                                <div className=\"w-full h-64 bg-myTheme-cardbg rounded shadow-xl p-2 text-center\">\r\n                                    <table className=\"w-full table-auto text-center py-2 h-56\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    {/* TODO: overflow a dát jich tam třeba 15 aby to bylo scrollable */}\r\n                                                    <th className=\"px-4 py-1 text-myTheme-tpr font-normal\">Uživatel</th>\r\n                                                    <th className=\"px-4 py-1 text-myTheme-tpr font-normal\">Příchod</th>\r\n                                                    <th className=\"px-4 py-1 text-myTheme-tpr\"></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                        <tbody>\r\n                                            {arrivalsTableContent}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardComponent;","const Exercises = [\r\n    {\r\n        key: 'df',\r\n        label: 'Deadlift',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    // {\r\n    //     key: 'sumodf',\r\n    //     label: 'Sumo Deadlift',\r\n    //     category: 'legs',\r\n    //     kategorie: 'nohy'\r\n    // },\r\n    {\r\n        key: 'romaniandf',\r\n        label: 'Rumunský Deadlift',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'squat',\r\n        label: 'Squat',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'fsquat',\r\n        label: 'Front Squat',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'hacksquat',\r\n        label: 'Hack Squat',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'vykopy',\r\n        label: 'Výkopy',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'vypady',\r\n        label: 'Výpady',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    {\r\n        key: 'calfraises',\r\n        label: 'Lýtka',\r\n        category: 'legs',\r\n        kategorie: 'nohy'\r\n    },\r\n    /*\r\n        CHEST\r\n    */\r\n    {\r\n        key: 'bench',\r\n        label: 'Benchpress',\r\n        category: 'chest',\r\n        kategorie: 'hrudník'\r\n    },\r\n    {\r\n        key: 'inclinebarbell',\r\n        label: 'Incline Barbell',\r\n        category: 'chest',\r\n        kategorie: 'hrudník'\r\n    },\r\n    {\r\n        key: 'inclinedumbbell',\r\n        label: 'Incline Dumbbell',\r\n        category: 'chest',\r\n        kategorie: 'hrudník'\r\n    },\r\n    {\r\n        key: 'butterflies',\r\n        label: 'Motýlci',\r\n        category: 'chest',\r\n        kategorie: 'hrudník'\r\n    },\r\n    /*\r\n        ARMS\r\n    */\r\n    {\r\n        key: 'tricepslano',\r\n        label: 'Triceps (lano)',\r\n        category: 'arms',\r\n        kategorie: 'ruce'\r\n    },\r\n    {\r\n        key: 'tricepsdumbbell',\r\n        label: 'Triceps (činky)',\r\n        category: 'arms',\r\n        kategorie: 'ruce'\r\n    },\r\n    {\r\n        key: 'bicepslano',\r\n        label: 'Biceps (lano)',\r\n        category: 'arms',\r\n        kategorie: 'ruce'\r\n    },\r\n    {\r\n        key: 'bicepsdumbbell',\r\n        label: 'Biceps (činky)',\r\n        category: 'arms',\r\n        kategorie: 'ruce'\r\n    },\r\n    /*\r\n        BACK\r\n    */\r\n    {\r\n        key: 'pulldown',\r\n        label: 'Pulldown',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    {\r\n        key: 'oppositepulldown',\r\n        label: 'Opposite Pulldown',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    {\r\n        key: 'row',\r\n        label: 'Row (dvojruč)',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    {\r\n        key: 'rowdumbbell',\r\n        label: 'Row (jednoruč)(upass)',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    {\r\n        key: 'facepull',\r\n        label: 'Face pull',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    {\r\n        key: 'rowdumbbellbench',\r\n        label: 'Row (jednoruč)(bench)',\r\n        category: 'back',\r\n        kategorie: 'záda'\r\n    },\r\n    /*\r\n        SHOULDERS\r\n    */\r\n    {\r\n        key: 'military',\r\n        label: 'Military Press',\r\n        category: 'shoulders',\r\n        kategorie: 'ramena'\r\n    },\r\n    {\r\n        key: 'militarydumbbell',\r\n        label: 'Military (jednoruč)',\r\n        category: 'shoulders',\r\n        kategorie: 'ramena'\r\n    },\r\n    {\r\n        key: 'rozpazky',\r\n        label: 'Rozpažky',\r\n        category: 'shoulders',\r\n        kategorie: 'ramena'\r\n    },\r\n    {\r\n        key: 'volant',\r\n        label: 'Volant',\r\n        category: 'shoulders',\r\n        kategorie: 'ramena'\r\n    },\r\n    {\r\n        key: 'backdelt',\r\n        label: 'Zadní delty',\r\n        category: 'shoulders',\r\n        kategorie: 'ramena'\r\n    },    \r\n  ];\r\n  \r\n  export default Exercises;","import React, { useEffect, useState } from \"react\";\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\r\nimport Notification from \"./Notification\";\r\n\r\nconst firebase = require('firebase');\r\n\r\nfunction FloatingDialog(props){ //usersData, selectedUser, exercise (key)\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [max, setMax] = useState(0);\r\n    const [work, setWork] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setMax(props.exMax);\r\n        setWork(props.exWork);\r\n    }, [props])\r\n\r\n    //React spring\r\n    const menuTransition = useTransition(show, null, {\r\n        from: { opacity: 0},\r\n        enter: { opacity: 1},\r\n        leave: { opacity: 0},\r\n    })\r\n\r\n    //function on button submit\r\n    function onSubmit(){\r\n        const db = firebase.firestore();\r\n        //get initial data of exerscise for selected member\r\n        if(props.usersData !== undefined){\r\n            const memberData = props.usersData.data.filter(member => {\r\n                return member.id === props.selectedUser;\r\n            });\r\n\r\n            let isExerciseInside = false;\r\n\r\n            if(memberData.length > 0){\r\n                let tmpExData = memberData[0].exercisesData;\r\n                tmpExData.forEach(element => {\r\n                    if (element.key === props.exercise){\r\n                        isExerciseInside = true;\r\n                        element.work = work;\r\n                        element.max = max;\r\n                    }\r\n                })\r\n                \r\n                if(!isExerciseInside){\r\n                    tmpExData.push({ key : props.exercise, max: max, work: work });\r\n                }\r\n\r\n                //Update record in database\r\n                db.collection(\"users\").doc(props.selectedUser).update({ exercisesData : tmpExData })\r\n                .then(function (){\r\n                    Notification(\"Záznam byl upraven.\", false)\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error); \r\n                    Notification(\"Chyba\", true);\r\n                });\r\n\r\n                //Close dialog\r\n                setShow(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span>\r\n                <FontAwesomeIcon className=\"text-myTheme-tsec hover:text-myTheme-tpr cursor-pointer\" icon={ faEdit } onClick={() => setShow(!show)}/>\r\n            </span>\r\n\r\n            { /* Menu transition and content */ }\r\n            {\r\n                menuTransition.map(({ item, key, props }) =>\r\n                    item && \r\n                    <animated.div \r\n                        key={key} \r\n                        style={props} \r\n                        className=\"fixed bg-black-t-30 top-0 left-0 w-full h-auto z-50\"\r\n                        // onClick={() => setShow(!show)}\r\n                    >\r\n                        <div className=\"flex h-screen\">\r\n                            <div className=\"m-auto\">\r\n                                <div className=\"w-full sm:w-full md:w-64 bg-white rounded-lg shadow-md m-1 sm:m-1 md:m-6 text-center\">\r\n\r\n                                    <h2 className=\"py-6 text-xl text-myTheme-tpr\">Úprava váhy</h2>\r\n\r\n                                    <label className=\"w-full text-myTheme-tsec\">\r\n                                        Pracovní váha\r\n                                    </label>\r\n                                    <div className=\"py-3\">\r\n                                        <input className=\"font-bold text-xl text-center text-myTheme-tpr\" \r\n                                                type=\"number\" id=\"workingWeight\" name=\"workingWeight\" min=\"0\" max=\"300\" \r\n                                                step=\"0.5\" value={work} onChange={(e) => setWork(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <label className=\"w-full text-myTheme-tsec pt-5\">\r\n                                        Maximální váha\r\n                                    </label>\r\n                                    <div className=\"py-3\">\r\n                                        <input className=\"font-bold text-xl text-center text-myTheme-tpr\" \r\n                                                type=\"number\" id=\"maxWeight\" name=\"maxWeight\" min=\"0\" max=\"300\" \r\n                                                step=\"0.5\" value={max} onChange={(e) => setMax(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"flex justify-center w-full\">\r\n                                        <button onClick={() => setShow(!show)} type=\"submit\" className=\"w-1/2 rounded-lg shadow-xl border p-3 m-3 mt-12\">Storno</button>\r\n                                        <button onClick={() => onSubmit()} type=\"button\" className=\"rounded-lg font-bold bg-myTheme-pr text-white shadow-xl border p-3 m-3 mt-12 w-1/2\">Uložit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </animated.div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FloatingDialog;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport LoadingSpinner from \"../Components/LoadingSpinner\";\r\nimport Exercises from \"../Helpfiles/Exercises\";\r\nimport Members from \"../Helpfiles/Members\";\r\nimport FloatingDialog from \"../Components/FloatingDialog\";\r\n\r\nfunction RecordsComponent(props){\r\n    \r\n    const [selectedUser, setSelectedUser] = useState(\"dudu\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //Generate new content everytime when props change\r\n    useEffect(() => {\r\n        if (props.usersData.data.length > 0){\r\n            setIsLoading(false);\r\n        }\r\n        else {\r\n            setIsLoading(true);\r\n        }\r\n    }, [props, selectedUser]);\r\n\r\n    //Cards\r\n    let cards = Exercises.map(exercise  => {\r\n        if (!isLoading){\r\n            const memberData = props.usersData.data.filter(member => {\r\n                return member.id === selectedUser;\r\n            });\r\n\r\n            let work = 0;\r\n            let max = 0;\r\n\r\n            //Members max and work weights\r\n            if (memberData){\r\n                if (memberData[0].exercisesData.length > 0){\r\n                    memberData[0].exercisesData.forEach(element => {\r\n                        if (element.key === exercise.key){\r\n                            work = element.work;\r\n                            max = element.max;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //Color of card background -> legs/shoulders/hands/chest/back\r\n            let tableDesign = \"bg-orange-300 \"; //LEGS default\r\n            if (exercise.category === \"chest\") tableDesign = \"bg-blue-300\";\r\n            else if (exercise.category === \"back\") tableDesign = \"bg-yellow-400\";\r\n            else if (exercise.category === \"shoulders\") tableDesign = \"bg-red-300\";\r\n            else if (exercise.category === \"arms\") tableDesign = \"bg-green-300\";\r\n\r\n            return (\r\n                <div key={exercise.key} className={`w-full sm:w-full md:w-56 bg-myTheme-cardbg rounded-lg shadow-lg m-1 sm:m-1 md:m-5 mb-5 text-left`}>\r\n                    <div className={`w-full h-1 rounded-full ${tableDesign}`}></div>\r\n                    <span className=\"flex justify-between px-3 pt-2\">\r\n                        <span className={`tracking-wider inline-block text-myTheme-cardbg text-xs px-2 mt-1 rounded-full uppercase  ${tableDesign}`}> {exercise.kategorie} </span>\r\n                        <FloatingDialog usersData={props.usersData} selectedUser={selectedUser} exercise={exercise.key} exMax={max} exWork={work} />\r\n                    </span>\r\n                    <div className=\"px-6 pb-6\">\r\n                        <div className=\"font-bold text-myTheme-tpr\"> {exercise.label} </div>\r\n                        <div className=\"text-myTheme-tsec\"> Pracovní váha: {work} kg</div>\r\n                        <div className=\"text-myTheme-tsec\"> Maximální váha: {max} kg</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n    //Select options\r\n    let options = Members.map((member) => \r\n        <option key={member.key} value={member.key}>\r\n            {member.label}\r\n        </option>\r\n    );\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"items-center text-center\">\r\n            {isLoading &&\r\n                <div className=\"flex justify-center mt-64 \">  \r\n                    <LoadingSpinner/> \r\n                </div>\r\n            }\r\n\r\n            {!isLoading &&\r\n                <div className=\"container mx-auto\">\r\n                    <span>\r\n                        <h3 className=\"text-myTheme-tsec mb-5\">Vyber uživatele a uprav váhy kliknutím na ikonu \"editace\" v pravém rohu každého cviku.</h3>\r\n                    </span>\r\n                    <select className=\"text-myTheme-tpr bg-myTheme-bg text-xl p-2 mb-5\" name=\"members\" id=\"memberSelector\" onChange={(e) => setSelectedUser(e.target.value)}>\r\n                        {options}\r\n                    </select>\r\n                    <div className=\"flex justify-center flex-wrap\">\r\n                        {cards}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordsComponent;","import React from \"react\";\r\n\r\nfunction WeightComponent(){\r\n    return (\r\n        <div>\r\n            <p>to be done 🤷‍♂️</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeightComponent;","import React from \"react\";\r\n\r\nfunction MeasurementsComponent(){\r\n    return (\r\n        <div>\r\n            <p>to be done 🤷‍♂️</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeasurementsComponent;","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport DashboardComponent from \"./Views/Dashboard\";\nimport RecordsComponent from \"./Views/Records\";\nimport WeightComponent from \"./Views/Weight\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MeasurementsComponent from './Views/Measurements';\n\nconst firebase = require('firebase');\n\nfunction App() {\n\n  const [usersData, setUsersData] = useState({\n    loading: false,\n    data: []\n  });\n\n  useEffect(() => {\n    firebase.firestore().collection('users').onSnapshot(serverUpdate => {\n      const users = serverUpdate.docs.map(_doc => {\n        const data = _doc.data();\n        data['id'] = _doc.id;\n        return data;\n      });\n      setUsersData({loading: false, data: users});\n    })\n  }, []);\n\n  return (\n    <div className=\"App font-robot\">\n      <Router>\n        <div className=\"flex flex-col bg-myTheme-bg \">\n          <Header usersData={usersData}/>\n          <div className=\"p-3 min-h-screen bg-myTheme-bg\">\n            <Switch>\n              <Route exact path=\"/\"> <DashboardComponent usersData={usersData}/> </Route>\n              <Route path=\"/weight\"> <WeightComponent usersData={usersData}/> </Route>\n              <Route path=\"/records\"> <RecordsComponent usersData={usersData}/> </Route>\n              {/* <Route path=\"/measurements\"> <MeasurementsComponent usersData={usersData}/> </Route> */}\n            </Switch>          \n          </div>\n\n          <Footer/>\n\n          <ToastContainer\n            position=\"bottom-left\"\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable={false}\n            pauseOnHover\n          />\n\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGKwLs1GcGuGsMDMc6e5ObLLMWvgw17xQ\",\n  authDomain: \"izworkout.firebaseapp.com\",\n  databaseURL: \"https://izworkout.firebaseio.com\",\n  projectId: \"izworkout\",\n  storageBucket: \"izworkout.appspot.com\",\n  messagingSenderId: \"335358269966\",\n  appId: \"1:335358269966:web:c4b24ee7f4a06282c03a5f\",\n  measurementId: \"G-YD6W17VTRN\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}